module SkelWhiteRabbit where

-- Haskell module generated by the BNF converter

import AbsWhiteRabbit
import ErrM
type Result = Err String

failure :: Show a => a -> Result
failure x = Bad $ "Undefined case: " ++ show x

transIdent :: Ident -> Result
transIdent x = case x of
  Ident str  -> failure x


transExpression :: Expression -> Result
transExpression x = case x of
  Sequence expression0 expression  -> failure x
  Application expression0 expression  -> failure x
  Mention variableexpr  -> failure x
  Value valueexpr  -> failure x
  Abstraction variableexprs expression  -> failure x
  Stipulation variableexpr expression  -> failure x


transVariableExpr :: VariableExpr -> Result
transVariableExpr x = case x of
  Transcription expression  -> failure x
  AtomLiteral id  -> failure x


transValueExpr :: ValueExpr -> Result
transValueExpr x = case x of
  Numeric n  -> failure x



